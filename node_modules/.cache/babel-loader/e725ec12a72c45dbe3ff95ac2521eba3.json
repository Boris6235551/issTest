{"ast":null,"code":"const API_ROOT = 'https://jsonplaceholder.typicode.com/users/1/posts';\nexport const data = async () => {\n  try {\n    const response = await fetch(API_ROOT);\n\n    if (response.ok) {\n      let getData = await response.json();\n      console.loggetData.map(element => element.isActive = true);\n      return getData;\n    } else {\n      throw new Error(response.status);\n    }\n  } catch (err) {\n    console.warn('httpGet error ', err);\n  }\n};","map":{"version":3,"names":["API_ROOT","data","response","fetch","ok","getData","json","console","loggetData","map","element","isActive","Error","status","err","warn"],"sources":["C:/Users/Fujitsu/iss_test/src/helpers/network.js"],"sourcesContent":["const API_ROOT = 'https://jsonplaceholder.typicode.com/users/1/posts'\n\nexport const data = async () => {\n    try {\n        const response = await fetch(API_ROOT)\n        if (response.ok) {\n            let getData = await response.json()\n            console.loggetData.map((element) => (element.isActive = true))\n            return getData\n        } else {\n            throw new Error(response.status)\n        }\n    } catch (err) {\n        console.warn('httpGet error ', err)\n    }\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,oDAAjB;AAEA,OAAO,MAAMC,IAAI,GAAG,YAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAD,CAA5B;;IACA,IAAIE,QAAQ,CAACE,EAAb,EAAiB;MACb,IAAIC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAApB;MACAC,OAAO,CAACC,UAAR,CAAmBC,GAAnB,CAAwBC,OAAD,IAAcA,OAAO,CAACC,QAAR,GAAmB,IAAxD;MACA,OAAON,OAAP;IACH,CAJD,MAIO;MACH,MAAM,IAAIO,KAAJ,CAAUV,QAAQ,CAACW,MAAnB,CAAN;IACH;EACJ,CATD,CASE,OAAOC,GAAP,EAAY;IACVP,OAAO,CAACQ,IAAR,CAAa,gBAAb,EAA+BD,GAA/B;EACH;AACJ,CAbM"},"metadata":{},"sourceType":"module"}