{"ast":null,"code":"import { checkCredentials } from '../utils/session';\nimport { data } from '../utils/network';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const DISPLAY_DATA = 'DISPLAY_DATA';\nexport const SORT = 'SORT';\nexport function logIn(params, cb) {\n  return dispatch => {\n    data().then(res => {\n      if (checkCredentials(params)) {\n        dispatch({\n          type: LOG_IN,\n          payload: {\n            name: params.username\n          },\n          data: res\n        });\n\n        disp: () => {\n          console.log('privet');\n        };\n\n        cb();\n      } else {\n        dispatch({\n          type: LOG_IN_FAILURE,\n          payload: {\n            errorMsg: params.errorMsg\n          },\n          error: true\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: LOG_IN,\n        payload: {\n          errorMsg: 'Сервер временно недоступен'\n        },\n        error: true\n      });\n    });\n  };\n}\nexport function display(data, key) {\n  data[key].isClose = data[key].isClose ? false : true;\n  return dispatch => {\n    dispatch({\n      type: DISPLAY_DATA,\n      data: data\n    });\n  };\n}\nexport function sortById(data, stateSortById) {\n  if (stateSortById) data.sort((el1, el2) => el1.id > el2.id ? -1 : 1);\n  if (!stateSortById) data.sort((el1, el2) => el1.id > el2.id ? 1 : -1);\n  return dispatch => {\n    dispatch({\n      type: SORT_BY_ID,\n      data: data\n    });\n  };\n}\nexport function sortBy(data, stateSortById) {\n  if (stateSortById) data.sort((el1, el2) => el1.id > el2.id ? -1 : 1);\n  if (!stateSortById) data.sort((el1, el2) => el1.id > el2.id ? 1 : -1);\n  return dispatch => {\n    dispatch({\n      type: SORT_BY_ID,\n      data: data\n    });\n  };\n}","map":{"version":3,"names":["checkCredentials","data","LOG_IN","LOG_IN_FAILURE","DISPLAY_DATA","SORT","logIn","params","cb","dispatch","then","res","type","payload","name","username","disp","console","log","errorMsg","error","catch","display","key","isClose","sortById","stateSortById","sort","el1","el2","id","SORT_BY_ID","sortBy"],"sources":["C:/Users/Fujitsu/iss_test/src/actions/Actions.js"],"sourcesContent":["import { checkCredentials } from '../utils/session'\nimport { data } from '../utils/network'\n\nexport const LOG_IN = 'LOG_IN'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\nexport const DISPLAY_DATA = 'DISPLAY_DATA'\nexport const SORT = 'SORT'\n\nexport function logIn(params, cb) {\n    return dispatch => {\n        data()\n            .then(res => {\n                if (checkCredentials(params)) {\n                    dispatch({\n                        type: LOG_IN,\n                        payload: {\n                            name: params.username,\n\n                        },\n                        data: res,\n\n                    })\n                    disp: () => { console.log('privet') }\n                    cb()\n                } else {\n                    dispatch({\n                        type: LOG_IN_FAILURE,\n                        payload: {\n                            errorMsg: params.errorMsg,\n                        },\n                        error: true,\n                    })\n                }\n            })\n            .catch(error => {\n                dispatch({\n                    type: LOG_IN,\n                    payload: {\n                        errorMsg: 'Сервер временно недоступен',\n                    },\n                    error: true,\n                })\n            })\n    }\n}\n\nexport function display(data, key) {\n    data[key].isClose = data[key].isClose ? false : true\n    return dispatch => {\n        dispatch({\n            type: DISPLAY_DATA,\n            data: data,\n        })\n    }\n}\n\nexport function sortById(data, stateSortById) {\n    if (stateSortById) data.sort((el1, el2) => el1.id > el2.id ? -1 : 1);\n    if (!stateSortById) data.sort((el1, el2) => el1.id > el2.id ? 1 : -1);\n    return dispatch => {\n        dispatch({\n            type: SORT_BY_ID,\n            data: data,\n        })\n    }\n}\n\nexport function sortBy(data, stateSortById) {\n    if (stateSortById) data.sort((el1, el2) => el1.id > el2.id ? -1 : 1);\n    if (!stateSortById) data.sort((el1, el2) => el1.id > el2.id ? 1 : -1);\n    return dispatch => {\n        dispatch({\n            type: SORT_BY_ID,\n            data: data,\n        })\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}