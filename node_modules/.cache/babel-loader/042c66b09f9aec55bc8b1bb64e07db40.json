{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\iss_test\\\\src\\\\containers\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => rest.isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.session.user\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","rest","props","isAuth","pathname","state","from","location","mapStateToProps","session","user"],"sources":["C:/Users/Fujitsu/iss_test/src/containers/PrivateRoute.js"],"sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        rest.isAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.session.user,\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAuC;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAsC;EAC1D,oBACE,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAEC,KAAK,IACXD,IAAI,CAACE,MAAL,gBACE,QAAC,SAAD,OAAeD;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,gBAGE,QAAC,QAAD;MACE,EAAE,EAAE;QACFE,QAAQ,EAAE,QADR;QAEFC,KAAK,EAAE;UAAEC,IAAI,EAAEJ,KAAK,CAACK;QAAd;MAFL;IADN;MAAA;MAAA;MAAA;IAAA;EANN;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAlBD;;KAAMT,Y;;AAoBN,MAAMU,eAAe,GAAGH,KAAK,IAAI;EAC/B,OAAO;IACLF,MAAM,EAAEE,KAAK,CAACI,OAAN,CAAcC;EADjB,CAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACW,eAAD,CAAP,CAAyBV,YAAzB,CAAf"},"metadata":{},"sourceType":"module"}