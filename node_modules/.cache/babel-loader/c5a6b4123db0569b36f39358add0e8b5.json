{"ast":null,"code":"import { checkCredentials } from '../helpers/session';\nimport { data } from '../helpers/network';\nexport const LOG_IN = 'LOG_IN'; // export const LOG_OUT = 'LOG_OUT'\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport function logIn(params, cb) {\n  return dispatch => {\n    data().then(res => {\n      if (checkCredentials(params)) {\n        dispatch({\n          type: LOG_IN,\n          payload: {\n            name: params.username\n          },\n          data: res\n        });\n\n        disp: () => {\n          console.log('privet');\n        };\n\n        cb();\n      } else {\n        dispatch({\n          type: LOG_IN_FAILURE,\n          payload: {\n            errorMsg: params.errorMsg\n          },\n          error: true\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: LOG_IN,\n        payload: {\n          errorMsg: 'Сервер временно недоступен'\n        },\n        error: true\n      });\n    });\n  };\n} // export function display(number) {\n//     dispatch({\n//         type: DISPLAY_DATA,\n//         payload: {\n//             name: params.username,\n//         },\n//         data: res,\n//     })\n// }","map":{"version":3,"names":["checkCredentials","data","LOG_IN","LOG_IN_FAILURE","logIn","params","cb","dispatch","then","res","type","payload","name","username","disp","console","log","errorMsg","error","catch"],"sources":["C:/Users/Fujitsu/iss_test/src/actions/SessionActions.js"],"sourcesContent":["import { checkCredentials } from '../helpers/session'\nimport { data } from '../helpers/network'\n\nexport const LOG_IN = 'LOG_IN'\n// export const LOG_OUT = 'LOG_OUT'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport function logIn(params, cb) {\n    return dispatch => {\n        data()\n            .then(res => {\n                if (checkCredentials(params)) {\n                    dispatch({\n                        type: LOG_IN,\n                        payload: {\n                            name: params.username,\n\n                        },\n                        data: res,\n                     \n                    })\n                    disp: () => {console.log('privet')}\n                    cb()\n                } else {\n                    dispatch({\n                        type: LOG_IN_FAILURE,\n                        payload: {\n                            errorMsg: params.errorMsg,\n                        },\n                        error: true,\n                    })\n                }\n            })\n            .catch(error => {\n                dispatch({\n                    type: LOG_IN,\n                    payload: {\n                        errorMsg: 'Сервер временно недоступен',\n                    },\n                    error: true,\n                })\n            })\n    }\n}\n\n// export function display(number) {\n//     dispatch({\n//         type: DISPLAY_DATA,\n//         payload: {\n//             name: params.username,\n\n//         },\n//         data: res,\n//     })\n// }\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CACP;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuBC,EAAvB,EAA2B;EAC9B,OAAOC,QAAQ,IAAI;IACfN,IAAI,GACCO,IADL,CACUC,GAAG,IAAI;MACT,IAAIT,gBAAgB,CAACK,MAAD,CAApB,EAA8B;QAC1BE,QAAQ,CAAC;UACLG,IAAI,EAAER,MADD;UAELS,OAAO,EAAE;YACLC,IAAI,EAAEP,MAAM,CAACQ;UADR,CAFJ;UAMLZ,IAAI,EAAEQ;QAND,CAAD,CAAR;;QASAK,IAAI,EAAE,MAAM;UAACC,OAAO,CAACC,GAAR,CAAY,QAAZ;QAAsB,CAA7B;;QACNV,EAAE;MACL,CAZD,MAYO;QACHC,QAAQ,CAAC;UACLG,IAAI,EAAEP,cADD;UAELQ,OAAO,EAAE;YACLM,QAAQ,EAAEZ,MAAM,CAACY;UADZ,CAFJ;UAKLC,KAAK,EAAE;QALF,CAAD,CAAR;MAOH;IACJ,CAvBL,EAwBKC,KAxBL,CAwBWD,KAAK,IAAI;MACZX,QAAQ,CAAC;QACLG,IAAI,EAAER,MADD;QAELS,OAAO,EAAE;UACLM,QAAQ,EAAE;QADL,CAFJ;QAKLC,KAAK,EAAE;MALF,CAAD,CAAR;IAOH,CAhCL;EAiCH,CAlCD;AAmCH,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}